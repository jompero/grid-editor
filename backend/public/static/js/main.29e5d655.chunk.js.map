{"version":3,"sources":["9445.png","components/Grid.tsx","components/Tile.tsx","App.tsx","index.tsx"],"names":["module","exports","Grid","rows","columns","tileHeight","tileWidth","children","gridContainerStyle","display","gridTemplateColumns","gridTemplateRows","style","Tile","image","posX","posY","backgroundImage","transform","transformOrigin","backgroundPosition","width","height","margin","App","className","AppBar","position","Toolbar","Typography","variant","tiles","i","coordinate","mapping","push","console","log","tileMap","ReactDOM","render","document","getElementById"],"mappings":"kHAAAA,EAAOC,QAAU,IAA0B,kC,wTCwB5BC,MAdf,YAA0E,IAA1DC,EAAyD,EAAzDA,KAAMC,EAAmD,EAAnDA,QAASC,EAA0C,EAA1CA,WAAYC,EAA8B,EAA9BA,UAAWC,EAAmB,EAAnBA,SAC5CC,EAAqB,CACvBC,QAAS,cACTC,oBAAoB,UAAD,OAAYN,EAAZ,aAAwBE,EAAxB,mBACnBK,iBAAiB,UAAD,OAAYR,EAAZ,aAAqBE,EAArB,oBAGpB,OACI,uBAAKO,MAAOJ,GACPD,ICQEM,MAnBf,YAA6C,IAA7BC,EAA4B,EAA5BA,MAAOC,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,KAErBJ,EAAQ,CACZK,gBAAgB,OAAD,OAASH,EAAT,KACfI,UAAW,WACXC,gBAAiB,WACjBC,mBAAmB,IAAD,OAAML,EAAN,eAAiBC,EAAjB,MAClBK,MAAO,OACPC,OAAQ,OACRC,OAAQ,QAGV,OACE,2BACE,uBAAKX,MAAOA,M,yBCIHY,MAnBf,WAEE,OACE,uBAAKC,UAAU,OACb,gBAACC,EAAA,EAAD,CAAQC,SAAS,UACf,gBAACC,EAAA,EAAD,KACE,gBAACC,EAAA,EAAD,CAAYC,QAAQ,MAApB,iBAMJ,gBAAC,EAAD,CAAM1B,QAAS,EAAGD,KAAM,EAAGE,WAAY,GAAIC,UAAW,IAS5D,WAEE,IADA,IAAIyB,EAAQ,GACHC,EAAI,EAAGA,EAAI,GAAIA,IAAK,CAC3B,IAAIC,EAAyBC,EAAQF,EAAE,GACvCD,EAAMI,KAAK,gBAAC,EAAD,CAAMrB,MAAOA,IAAOC,KAAMkB,EAAU,EAAOjB,KAAMiB,EAAU,KAGxE,OADAG,QAAQC,IAAIN,GACLA,EAfAO,MChBTC,IAASC,OAAO,gBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.29e5d655.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/9445.99405a1b.png\";","import * as React from 'react';\r\n\r\nexport interface Props {\r\n    rows: number,\r\n    columns: number,\r\n    tileHeight: number,\r\n    tileWidth: number,\r\n    children: React.ReactNode\r\n}\r\n\r\nfunction Grid({ rows, columns, tileHeight, tileWidth, children }: Props) {\r\n    const gridContainerStyle = {\r\n        display: 'inline-grid',\r\n        gridTemplateColumns: `repeat(${columns}, ${tileWidth}px [col-start])`,\r\n        gridTemplateRows: `repeat(${rows}, ${tileHeight}px [row-start])`,\r\n      }\r\n\r\n    return (\r\n        <div style={gridContainerStyle}>\r\n            {children}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Grid;","import * as React from 'react';\r\n\r\nexport interface Props {\r\n  image: string;\r\n  posX: number;\r\n  posY: number;\r\n}\r\n\r\nfunction Tile({ image, posX, posY }: Props) {\r\n\r\n  const style = {\r\n    backgroundImage: `url(${image})`,\r\n    transform: 'scale(2)',\r\n    transformOrigin: 'top left',\r\n    backgroundPosition: `-${posX}px -${posY}px`,\r\n    width: '16px',\r\n    height: '16px',\r\n    margin: '16px'\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div style={style} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Tile;\r\n","import * as React from 'react';\nimport { AppBar, Toolbar, Typography } from '@material-ui/core';\nimport Grid from './components/Grid'\nimport Tile from './components/Tile';\nimport image from './9445.png';\nimport mapping from './9445.json';\n\nfunction App() {\n\n  return (\n    <div className=\"App\">\n      <AppBar position='static'>\n        <Toolbar>\n          <Typography variant=\"h6\">\n            Grid Editor\n          </Typography>\n        </Toolbar>\n      </AppBar>\n\n      <Grid columns={5} rows={3} tileHeight={32} tileWidth={32} >\n        {tileMap()}\n      </Grid>\n    </div>\n  );\n}\n\nexport default App;\n\nfunction tileMap(): any {\n  let tiles = [];\n  for (let i = 0; i < 15; i++) {\n    let coordinate: Coordinate = mapping[i%4];\n    tiles.push(<Tile image={image} posX={coordinate['x']} posY={coordinate['y']} />)\n  }\n  console.log(tiles)\n  return tiles;\n}\n\nexport interface Coordinate {\n  x: number,\n  y: number,\n  height: number,\n  width: number\n}","import * as React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}