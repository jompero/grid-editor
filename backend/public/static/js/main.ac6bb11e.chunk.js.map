{"version":3,"sources":["9445.png","types/TileArray.tsx","reducers/tileArrayReducer.tsx","components/Grid.tsx","components/Tile.tsx","components/Canvas.tsx","reducers/brushReducer.tsx","components/Circle.tsx","components/Palette.tsx","components/ToolBar.tsx","App.tsx","store.tsx","index.tsx"],"names":["module","exports","TileArray","tiles","width","height","empty","this","paint","state","index","tile","newMap","map","oldTile","i","tileArrayReducer","Array","fill","action","type","data","Grid","children","columns","rows","tileHeight","tileWidth","scale","classes","makeStyles","theme","createStyles","gridContainer","display","gridTemplateColumns","gridTemplateRows","transformOrigin","transform","cursor","useStyles","className","React","child","Tile","image","posX","posY","style","backgroundImage","backgroundPosition","Canvas","dispatch","useDispatch","useSelector","tileArray","brush","tools","paintTile","console","log","t","key","onClick","onMouseDown","onMouseEnter","event","nativeEvent","which","mapping","initialState","setTile","BrushReducer","circle","alignItems","justifyContent","background","borderRadius","content","boxShadow","Circle","window","position","top","left","Palette","setOpen","open","Modal","onClose","root","appBar","zIndex","drawer","flexShrink","title","flexGrow","tool","marginRight","margin","toolbarMargin","mixins","toolbar","ToolBar","useState","AppBar","Toolbar","Typography","variant","x","y","coordinate","setBrush","App","reducer","combineReducers","store","createStore","getState","render","ReactDOM","document","getElementById","subscribe"],"mappings":"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","file":"static/js/main.ac6bb11e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/9445.99405a1b.png\";","export class TileArray {\r\n    empty: number = 0;\r\n    width: number;\r\n    height: number;\r\n    tiles: Array<number>;\r\n\r\n    constructor(tiles: Array<number>, width?: number, height?: number) {\r\n        this.tiles = tiles;\r\n        this.width = width ? width : 16;\r\n        this.height = height ? height : 16;\r\n    }\r\n};","import { TileArray } from \"../types/TileArray\";\r\n\r\ninterface TileArrayAction {\r\n    type: string,\r\n    data: {\r\n        index: number,\r\n        tile: number\r\n    }\r\n}\r\n\r\nconst tileArrayReducer = (state: TileArray = new TileArray(new Array(16*16).fill(0)), action: TileArrayAction) => {\r\n    switch(action.type) {\r\n      case 'SET_TILE': return paint(state, action.data.index, action.data.tile);\r\n      default:\r\n      return state;\r\n    }\r\n  }\r\n\r\nfunction paint(state: TileArray, index: number, tile: number): TileArray {\r\n    const newMap = state.tiles.map((oldTile, i) => i !== index ? oldTile : tile);\r\n    return new TileArray(newMap);\r\n}\r\n\r\nexport function paintTile(index: number, tile: number) {\r\n  return {\r\n    type: 'SET_TILE',\r\n    data: { index, tile }\r\n  }\r\n}\r\n\r\nexport default tileArrayReducer;","import * as React from 'react';\r\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles'\r\n\r\nexport interface Props {\r\n    rows: number,\r\n    columns: number,\r\n    tileHeight: number,\r\n    tileWidth: number,\r\n    scale: number,\r\n    children: React.ReactNode\r\n}\r\n\r\nfunction Grid({ children, columns, rows, tileHeight, tileWidth, scale }: Props) {\r\n\r\n    const useStyles =\r\n    makeStyles((theme: Theme) =>\r\n        createStyles({\r\n            gridContainer: {\r\n                display: 'inline-grid',\r\n                gridTemplateColumns: `repeat(${columns}, ${tileWidth * scale}px [col-start])`,\r\n                gridTemplateRows: `repeat(${rows}, ${tileHeight * scale}px [row-start])`,\r\n            },\r\n            children: {\r\n                transformOrigin: 'top left',\r\n                transform: `scale(${scale})`,\r\n                \"&:hover\": {\r\n                    cursor: 'pointer'\r\n                },\r\n            }\r\n        })\r\n    )\r\n\r\n    const classes = useStyles();\r\n\r\n    function styledChildren(): any {\r\n        if (!children) return null;\r\n        return React.Children.map(children, (child) => <div className={classes.children}>{child}</div>);\r\n    }\r\n    \r\n    return (\r\n        <div className={classes.gridContainer}>\r\n            {styledChildren()}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Grid;","import * as React from 'react';\r\n\r\nexport interface Props {\r\n  image: string;\r\n  posX: number;\r\n  posY: number;\r\n}\r\n\r\nfunction Tile({ image, posX, posY }: Props) {\r\n\r\n  const style = {\r\n    backgroundImage: `url(${image})`,\r\n    backgroundPosition: `-${posX}px -${posY}px`,\r\n    width: '16px',\r\n    height: '16px'\r\n  }\r\n\r\n  return (\r\n    <div style={style} />\r\n  );\r\n}\r\n\r\nexport default Tile;\r\n","import * as React from 'react';\r\nimport { paintTile } from '../reducers/tileArrayReducer';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport Grid from './Grid';\r\nimport image from '../9445.png';\r\nimport mapping from '../9445.json';\r\nimport Tile from './Tile';\r\nimport { RootState } from '../store';\r\n\r\ninterface Props {\r\n  width: number,\r\n  height: number,\r\n  tileHeight?: number,\r\n  tileWidth?: number,\r\n}\r\n\r\nfunction Canvas({ width, height, tileHeight, tileWidth }: Props) {\r\n    const dispatch = useDispatch();\r\n    const tiles = useSelector((state: RootState) => state.tileArray.tiles);\r\n    const brush = useSelector((state: RootState) => state.tools.brush);\r\n\r\n    function paint(index: number) {\r\n      dispatch(paintTile(index, brush));\r\n      console.log('painting', brush, 'on', index);\r\n    }\r\n\r\n    function parseTileArray() {\r\n        return tiles.map((t: number, i: number) => {\r\n          return (\r\n            <div \r\n              key={i} \r\n              onClick={() => paint(i)}\r\n              onMouseDown={() => paint(i)}\r\n              onMouseEnter={(event) =>  { \r\n                event.nativeEvent.which === 1 && paint(i);\r\n              }} \r\n            >\r\n              {t >= 0 && <Tile image={image} posX={mapping[t]['x']} posY={mapping[t]['y']} />}\r\n            </div>\r\n          )\r\n        });\r\n      }\r\n    return (\r\n        <Grid columns={width ? width : 16} rows={height ? height : 16} tileHeight={tileHeight ? tileHeight : 16} tileWidth={tileWidth ? tileWidth : 16} scale={2} >\r\n            {parseTileArray()}\r\n        </Grid>\r\n    );\r\n}\r\n\r\nexport default Canvas;\r\n","export interface BrushState {\r\n    brush: number\r\n}\r\n\r\ninterface BrushAction {\r\n    type: string,\r\n    data: {\r\n        brush: number\r\n    }\r\n}\r\n\r\nconst initialState: BrushState = {\r\n    brush: 0\r\n}\r\n\r\nfunction BrushReducer(state: BrushState = initialState, action: BrushAction): BrushState {\r\n    switch(action.type) {\r\n      case 'SET_BRUSH': \r\n        return setTile(state, action.data.brush);\r\n      default:\r\n        return state\r\n    }\r\n  }\r\n\r\nfunction setTile(state: BrushState, brush: number): BrushState {\r\n    const newState = { ...state, brush };\r\n    return newState;\r\n}\r\n\r\nexport function setBrush(brush: number): BrushAction {\r\n    return {\r\n        type: 'SET_BRUSH',\r\n        data: { brush }\r\n      }\r\n}\r\n\r\nexport default BrushReducer;","import * as React from 'react';\r\nimport { createStyles, Theme, makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        circle: {\r\n            transform: 'scale(1.2)',\r\n            display: 'flex',\r\n            alignItems: 'center',\r\n            justifyContent: 'center',\r\n            width: '64px',\r\n            height: '64px',\r\n            background: 'white',\r\n            borderRadius: '50%'\r\n        },\r\n        content: {\r\n            boxShadow: '0px 0px 5px 0px rgba(0,0,0,0.75)'\r\n        }\r\n    })\r\n);\r\n\r\ninterface Props {\r\n    children: any\r\n}\r\n\r\nfunction Circle({children}: Props) {\r\n    const classes = useStyles(); \r\n\r\n    return (\r\n        <div className={classes.circle}>\r\n            <div className={classes.content}>\r\n                {children}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Circle;","import * as React from 'react';\r\nimport { Modal } from '@material-ui/core';\r\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles'\r\nimport Grid from './Grid';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        window: {\r\n            position: 'absolute',\r\n            top: '50%',\r\n            left: '50%',\r\n            transform: `translate(-50%, -50%)`,\r\n            transformOrigin: 'center',\r\n        }\r\n    })\r\n);\r\n\r\nexport interface Props {\r\n    setOpen: Function,\r\n    open: boolean,\r\n    children: React.ReactNode\r\n}\r\n\r\nfunction Palette({ setOpen, open, children }: Props) {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div onClick={() => setOpen(false)}>\r\n            <Modal open={open} onClose={() => setOpen(false)} >\r\n                <div className={classes.window} >\r\n                    <Grid columns={24} rows={19} tileHeight={17} tileWidth={17} scale={2} >\r\n                        {children}\r\n                    </Grid>\r\n                </div>\r\n            </Modal>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Palette;\r\n","import React, { useState } from \"react\";\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { setBrush } from '../reducers/brushReducer';\r\nimport { AppBar, Toolbar, Typography, makeStyles, Theme, createStyles } from \"@material-ui/core\";\r\nimport Grid from \"./Grid\";\r\nimport Tile from \"./Tile\";\r\nimport Circle from \"./Circle\";\r\nimport Palette from \"./Palette\";\r\nimport { RootState } from \"../store\";\r\n\r\nimport image from '../9445.png';\r\nimport mapping from '../9445.json';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      display: 'flex',\r\n    },\r\n    appBar: {\r\n      zIndex: theme.zIndex.drawer + 1,\r\n    },\r\n    drawer: {\r\n      //width: 300,\r\n      flexShrink: 0,\r\n    },\r\n    title: {\r\n      flexGrow: 1,\r\n    },\r\n    tool: {\r\n      marginRight: '1em'\r\n    },\r\n    content: {\r\n      margin: 'auto'\r\n    },\r\n    toolbarMargin: theme.mixins.toolbar,\r\n  })\r\n);\r\n\r\ninterface Props {\r\n    image?: string,\r\n    mapping?: any,\r\n    children: React.ReactNode\r\n}\r\n\r\nexport interface Coordinate {\r\n    x: number,\r\n    y: number,\r\n    height: number,\r\n    width: number\r\n  }\r\n\r\nfunction ToolBar({ children }: Props) {\r\n    const dispatch = useDispatch();\r\n    const tiles = useSelector((state: RootState) => state.tileArray.tiles);\r\n    const brush = useSelector((state: RootState) => state.tools.brush);\r\n    console.log('brush', brush);\r\n    const classes = useStyles();\r\n\r\n    const [open, setOpen] = useState(false);\r\n\r\n    function palette(): any {\r\n        return mapping.map((coordinate: Coordinate, index: number) => \r\n              <div key={index} onClick={() => dispatch(setBrush(index))}>\r\n                  <Tile image={image} posX={coordinate.x} posY={coordinate.y} />\r\n              </div>\r\n            );\r\n    }\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <AppBar position='absolute' className={classes.appBar}>\r\n            <Toolbar>\r\n                <Typography variant=\"h6\" className={classes.title}>\r\n                  Grid Editor\r\n                </Typography>\r\n                <Typography variant=\"h6\" className={classes.tool}>\r\n                  Eraser\r\n                </Typography>\r\n                <Typography variant=\"h6\" className={classes.tool}>\r\n                  Undo\r\n                </Typography>\r\n                <Typography variant=\"h6\" className={classes.title}>\r\n                  Redo\r\n                </Typography>\r\n                <div onClick={() => setOpen(true)}>\r\n                  <Circle>\r\n                      <Grid columns={1} rows={1} tileHeight={14} tileWidth={16} scale={2.5} >\r\n                        <Tile image={image} posX={mapping[brush].x} posY={mapping[brush].y} />\r\n                      </Grid>\r\n                  </Circle>\r\n                </div>\r\n            </Toolbar>\r\n            </AppBar>\r\n\r\n            <div className={classes.content}>\r\n                <div className={classes.toolbarMargin} />\r\n                <div className={classes.content}>\r\n                  {children}\r\n                </div>\r\n\r\n                <Palette setOpen={setOpen} open={open}>\r\n                    {palette()}\r\n                </Palette>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ToolBar;","import * as React from 'react';\r\nimport Canvas from './components/Canvas';\r\nimport ToolBar from './components/ToolBar';\r\n\r\nfunction App() {\r\n\r\n  return (\r\n    <div>\r\n      <ToolBar>\r\n        <Canvas width = {16} height = {16} tileHeight = {16} tileWidth = {16} />\r\n      </ToolBar>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;","import { createStore, combineReducers } from 'redux';\r\nimport tileArrayReducer from './reducers/tileArrayReducer';\r\nimport BrushReducer, { BrushState } from './reducers/brushReducer';\r\nimport { TileArray } from './types/TileArray';\r\n\r\nexport interface RootState {\r\n  tileArray: TileArray,\r\n  tools: BrushState\r\n}\r\n\r\nconst reducer = combineReducers({\r\n    tileArray: tileArrayReducer,\r\n    tools: BrushReducer\r\n  });\r\n\r\nconst store = createStore(reducer);\r\nconsole.log('store', store.getState());\r\n\r\nexport default store;","import * as React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport App from './App';\r\nimport store from './store'\r\n\r\n\r\n\r\nconst render = () => ReactDOM.render(    \r\n    <Provider store={store} >\r\n        <App />\r\n    </Provider>,\r\n    document.getElementById('root'));\r\n\r\nrender();\r\nstore.subscribe(render);\r\n"],"sourceRoot":""}