{"version":3,"sources":["9445.png","components/Grid.tsx","components/Tile.tsx","components/Palette.tsx","components/TileMap.tsx","components/Circle.tsx","App.tsx","index.tsx"],"names":["module","exports","Grid","children","columns","rows","tileHeight","tileWidth","scale","classes","makeStyles","theme","createStyles","gridContainer","display","gridTemplateColumns","gridTemplateRows","transformOrigin","transform","cursor","useStyles","className","React","map","child","Tile","image","posX","posY","style","backgroundImage","backgroundPosition","width","height","window","position","top","left","Palette","setOpen","open","onClick","Modal","onClose","TileMap","circle","alignItems","justifyContent","background","borderRadius","content","boxShadow","Circle","root","appBar","zIndex","drawer","flexShrink","title","flexGrow","margin","toolbarMargin","mixins","toolbar","App","useState","tile","setTile","Array","fill","tileMap","setTileMap","paint","index","newMap","oldT","i","AppBar","Toolbar","Typography","variant","mapping","t","key","onMouseDown","onMouseEnter","event","nativeEvent","which","coordinate","x","y","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ab873059.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/9445.99405a1b.png\";","import * as React from 'react';\r\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles'\r\n\r\nexport interface Props {\r\n    rows: number,\r\n    columns: number,\r\n    tileHeight: number,\r\n    tileWidth: number,\r\n    scale: number,\r\n    children: React.ReactNode\r\n}\r\n\r\nfunction Grid({ children, columns, rows, tileHeight, tileWidth, scale }: Props) {\r\n\r\n    const useStyles =\r\n    makeStyles((theme: Theme) =>\r\n        createStyles({\r\n            gridContainer: {\r\n                display: 'inline-grid',\r\n                gridTemplateColumns: `repeat(${columns}, ${tileWidth * scale}px [col-start])`,\r\n                gridTemplateRows: `repeat(${rows}, ${tileHeight * scale}px [row-start])`,\r\n            },\r\n            children: {\r\n                transformOrigin: 'top left',\r\n                transform: `scale(${scale})`,\r\n                \"&:hover\": {\r\n                    cursor: 'pointer'\r\n                },\r\n            }\r\n        })\r\n    )\r\n\r\n    const classes = useStyles();\r\n\r\n    function styledChildren(): any {\r\n        if (!children) return null;\r\n        return React.Children.map(children, (child) => <div className={classes.children}>{child}</div>);\r\n    }\r\n    \r\n    return (\r\n        <div className={classes.gridContainer}>\r\n            {styledChildren()}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Grid;","import * as React from 'react';\r\n\r\nexport interface Props {\r\n  image: string;\r\n  posX: number;\r\n  posY: number;\r\n}\r\n\r\nfunction Tile({ image, posX, posY }: Props) {\r\n\r\n  const style = {\r\n    backgroundImage: `url(${image})`,\r\n    backgroundPosition: `-${posX}px -${posY}px`,\r\n    width: '16px',\r\n    height: '16px'\r\n  }\r\n\r\n  return (\r\n    <div style={style} />\r\n  );\r\n}\r\n\r\nexport default Tile;\r\n","import * as React from 'react';\r\nimport { Modal } from '@material-ui/core';\r\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles'\r\nimport Grid from './Grid';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        window: {\r\n            position: 'absolute',\r\n            top: '50%',\r\n            left: '50%',\r\n            transform: `translate(-50%, -50%)`,\r\n            transformOrigin: 'center',\r\n        }\r\n    })\r\n);\r\n\r\nexport interface Props {\r\n    setOpen: Function,\r\n    open: boolean,\r\n    children: React.ReactNode\r\n}\r\n\r\nfunction Palette({ setOpen, open, children }: Props) {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div onClick={() => setOpen(false)}>\r\n            <Modal open={open} onClose={() => setOpen(false)} >\r\n                <div className={classes.window} >\r\n                    <Grid columns={24} rows={19} tileHeight={17} tileWidth={17} scale={2} >\r\n                        {children}\r\n                    </Grid>\r\n                </div>\r\n            </Modal>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Palette;\r\n","import * as React from 'react';\r\nimport Grid from './Grid';\r\n\r\nexport interface Props {\r\n    width: number,\r\n    height: number,\r\n    tileHeight?: number,\r\n    tileWidth?: number,\r\n    children: React.ReactNode\r\n}\r\n\r\nfunction TileMap({ width, height, tileHeight, tileWidth, children }: Props) {\r\n    return (\r\n        <Grid columns={width} rows={height} tileHeight={tileHeight ? tileHeight : 16} tileWidth={tileWidth ? tileWidth : 16} scale={2} >\r\n            {children}\r\n        </Grid>\r\n    );\r\n}\r\n\r\nexport default TileMap;\r\n","import * as React from 'react';\r\nimport { createStyles, Theme, makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        circle: {\r\n            transform: 'scale(1.2)',\r\n            display: 'flex',\r\n            alignItems: 'center',\r\n            justifyContent: 'center',\r\n            width: '64px',\r\n            height: '64px',\r\n            background: 'white',\r\n            borderRadius: '50%'\r\n        },\r\n        content: {\r\n            boxShadow: '0px 0px 5px 0px rgba(0,0,0,0.75)'\r\n        }\r\n    })\r\n);\r\n\r\ninterface Props {\r\n    children: any\r\n}\r\n\r\nfunction Circle({children}: Props) {\r\n    const classes = useStyles(); \r\n\r\n    return (\r\n        <div className={classes.circle}>\r\n            <div className={classes.content}>\r\n                {children}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Circle;","import * as React from 'react';\r\nimport { AppBar, Toolbar, Typography } from '@material-ui/core';\r\nimport { createStyles, Theme, makeStyles } from '@material-ui/core/styles';\r\nimport Grid from './components/Grid'\r\nimport Tile from './components/Tile';\r\nimport Palette from './components/Palette';\r\nimport TileMap from './components/TileMap';\r\nimport Circle from './components/Circle';\r\nimport image from './9445.png';\r\nimport mapping from './9445.json';\r\nimport { useState } from 'react';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      display: 'flex',\r\n    },\r\n    appBar: {\r\n      zIndex: theme.zIndex.drawer + 1,\r\n    },\r\n    drawer: {\r\n      //width: 300,\r\n      flexShrink: 0,\r\n    },\r\n    title: {\r\n      flexGrow: 1,\r\n    },\r\n    content: {\r\n      margin: 'auto'\r\n    },\r\n    toolbarMargin: theme.mixins.toolbar,\r\n  })\r\n);\r\n\r\nfunction App() {\r\n\r\n  const classes = useStyles();\r\n\r\n  const [open, setOpen] = useState(false);\r\n  const [tile, setTile] = useState(0);\r\n  const [tileMap, setTileMap] = useState(new Array(30*20).fill(0));\r\n\r\n  function paint(index: number): void {\r\n    const newMap = tileMap.map((oldT, i) => i !== index ? oldT : tile);\r\n    setTileMap(newMap);\r\n  }\r\n\r\n  function palette(): any {\r\n    return mapping.map((coordinate, index) => <div key={index} onClick={() => setTile(index)}><Tile image={image} posX={coordinate.x} posY={coordinate.y} /></div>);\r\n  }\r\n\r\n  function parseTileMap(): any {\r\n    return tileMap.map((t, i) => {\r\n      return (\r\n        <div \r\n          key={i} \r\n          onClick={() => paint(i)}\r\n          onMouseDown={() => paint(i)}\r\n          onMouseEnter={(event) =>  { \r\n            event.nativeEvent.which === 1 && paint(i);\r\n          }} \r\n        >\r\n          <Tile image={image} posX={mapping[t]['x']} posY={mapping[t]['y']} />\r\n        </div>\r\n      )\r\n    });\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position='absolute' className={classes.appBar}>\r\n        <Toolbar>\r\n          <Typography variant=\"h6\" className={classes.title}>\r\n            Grid Editor\r\n          </Typography>\r\n          <div onClick={() => setOpen(true)}>\r\n            <Circle>\r\n              <Grid columns={1} rows={1} tileHeight={14} tileWidth={16} scale={2.5} >\r\n                <Tile image={image} posX={mapping[tile]['x']} posY={mapping[tile]['y']} />\r\n              </Grid>\r\n            </Circle>\r\n          </div>\r\n        </Toolbar>\r\n      </AppBar>\r\n\r\n      <div className={classes.content}>\r\n        <div className={classes.toolbarMargin} />\r\n        <TileMap width={30} height={20}>\r\n          {parseTileMap()}\r\n        </TileMap>\r\n\r\n        <Palette setOpen={setOpen} open={open}>\r\n          {palette()}\r\n        </Palette>\r\n      </div>\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n\r\nexport interface Coordinate {\r\n  x: number,\r\n  y: number,\r\n  height: number,\r\n  width: number\r\n}","import * as React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}