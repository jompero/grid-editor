version: 2.1
orbs:
  node: circleci/node@3.0.0
  heroku: circleci/heroku@1.1.1
  win: circleci/windows@2.2.0

jobs:
  backend:
    executor:
      name: node/default
      tag: '12.16'
    steps:
      - checkout
      - run: cd backend && npm install
      - run: cd backend && npm test

  frontend:
    executor:
      name: node/default
      tag: '12.16'
    steps:
      - checkout
      - run: cd client && npm install
      - run: cd client && npm test

  build_client:
    executor:
      name: node/default
      tag: '12.16'
    steps:
      - checkout
      - run: cd client && npm install
      - run: cd client && npm run build
      - run: cp -r client/build backend/dist/public

  build_backend:
    executor:
      name: node/default
      tag: '12.16'
    steps:
      - checkout
      - run: cd backend && npm install
      - run: cd backend && npm run build
    
  deploy:
    executor: heroku/default
    parameters:
      api-key:
        default: HEROKU_API_KEY
        type: env_var_name
      app-name:
        default: $HEROKU_APP_NAME
        type: string
      branch:
        default: master #$CIRCLE_BRANCH
        type: string
            app-name:
      default: $CIRCLE_TAG
        type: string

    steps:
      - checkout
      - heroku/install
      # - git subtree push -f --prefix backend heroku master
      # - heroku/deploy-via-git:
      #     force: true
      # - when:
      #   condition: << parameters.maintenance-mode >>
      #   steps:
      #     - run:
      #         command: 'heroku maintenance:on --app << parameters.app-name >>'
      #         name: Turn ON maintenance mode.
      - run:
        command: >
          heroku_url = "https://heroku:$<< parameters.api-key >>@git.heroku.com/<<
          parameters.app-name >>.git"

          if [ -z "<< parameters.branch >>" ]; then
            git subtree push --prefix backend $heroku_url << parameters.branch >>:master -f
          elif [ -z "<< parameters.tag >>" ]; then
            git subtree push $heroku_url << parameters.tag >>^{}:master -f
          else
            echo "No branch or tag found."
            exit 1
          fi
      
workflows:
  version: 2.1
  test_and_deploy_jobs:
    jobs:
    - backend
    - frontend
    - build_client:
        requires: 
          - frontend
    #       - build_backend
    # - build_backend:
    #     requires:
    #       - backend
    - deploy:
        requires: 
          - build_client
